services:
  app:
    build:
      context: .
      dockerfile: docker/Dockerfile.prod
    ports:
      - "${DOCKER_APP_PORT:-8000}:8000"
    environment:
      - DATABASE_URL=${DATABASE_URL}
      - REDIS_URL=${REDIS_URL}
      - SECRET_KEY=${SECRET_KEY}
      - CORS_ORIGINS=${CORS_ORIGINS}
      - REGON_API_KEY=${REGON_API_KEY}
      - IBAN_API_KEY=${IBAN_API_KEY}
      - REGON_API_URL=${REGON_API_URL}
      - MF_API_URL=${MF_API_URL}
      - VIES_API_URL=${VIES_API_URL}
      - IBAN_API_URL=${IBAN_API_URL}
      - CACHE_TTL_DEFAULT=${CACHE_TTL_DEFAULT}
      - CACHE_TTL_BANK_ACCOUNTS=${CACHE_TTL_BANK_ACCOUNTS}
      - RATE_LIMIT_FREE_TIER=${RATE_LIMIT_FREE_TIER}
      - RATE_LIMIT_PREMIUM_TIER=${RATE_LIMIT_PREMIUM_TIER}
    depends_on:
      - db
      - redis
    command: gunicorn app.main:app -w 4 -k uvicorn.workers.UvicornWorker --bind 0.0.0.0:8000
    restart: unless-stopped
    networks:
      - companyhub-network

  db:
    image: postgres:17
    environment:
      - POSTGRES_DB=${POSTGRES_DB}
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
    volumes:
      - postgres_data:/var/lib/postgresql/data
    restart: unless-stopped
    networks:
      - companyhub-network

  redis:
    image: redis:8-alpine
    volumes:
      - redis_data:/data
    command: redis-server --appendonly yes
    restart: unless-stopped
    networks:
      - companyhub-network

volumes:
  postgres_data:
  redis_data:
  pgadmin_data:

networks:
  companyhub-network:
    driver: bridge
